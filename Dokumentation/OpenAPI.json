{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "UserController",
      "description": "Verwaltet die CRUD-Operationen für Benutzer"
    },
    {
      "name": "ProductController",
      "description": "Verwaltet die CRUD-Operationen für Produkte"
    },
    {
      "name": "CategoryController",
      "description": "Verwaltet die CRUD-Operationen für die Kategorien"
    }
  ],
  "paths": {
    "/categories": {
      "get": {
        "tags": [
          "category-entity-controller",
          "CategoryController"
        ],
        "summary": "Listet alle Kategorien auf",
        "description": "Gibt eine Liste aller Kategorien zurück.",
        "operationId": "getCollectionResource-category-get_1_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiches Abrufen der Kategorien",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelCategory"
                }
              },
              "application/x-spring-data-compact+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelCategory"
                }
              },
              "text/uri-list": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "category-entity-controller",
          "CategoryController"
        ],
        "summary": "Erstellt eine neue Kategorie",
        "description": "Erstellt eine neue Kategorie mit den angegebenen Daten.",
        "operationId": "postCollectionResource-category-post_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Kategorie erfolgreich erstellt",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              }
            }
          },
          "400": {
            "description": "Ungültige Anfrage",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDetailDto"
                }
              }
            }
          }
        }
      }
    },
    "/categories/search/getById": {
      "get": {
        "tags": [
          "category-search-controller"
        ],
        "operationId": "executeSearch-category-get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "category-entity-controller",
          "CategoryController"
        ],
        "summary": "Findet eine Kategorie nach ID",
        "description": "Gibt die Details einer Kategorie anhand der spezifischen ID zurück.",
        "operationId": "getItemResource-category-get_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Die ID der Kategorie, die abgerufen werden soll",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Kategorie gefunden und zurückgegeben",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              }
            }
          },
          "404": {
            "description": "Kategorie nicht gefunden",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDetailDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "category-entity-controller",
          "CategoryController"
        ],
        "summary": "Aktualisiert eine Kategorie",
        "description": "Aktualisiert eine bestehende Kategorie anhand der spezifischen ID.",
        "operationId": "putItemResource-category-put_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Die ID der Kategorie, die aktualisiert werden soll",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Kategorie erfolgreich aktualisiert",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Kategorie nicht gefunden",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDetailDto"
                }
              }
            }
          },
          "400": {
            "description": "Ungültige Anfrage",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDetailDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "category-entity-controller",
          "CategoryController"
        ],
        "summary": "Löscht eine Kategorie",
        "description": "Löscht eine Kategorie anhand der spezifischen ID.",
        "operationId": "deleteItemResource-category-delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Die ID der Kategorie, die gelöscht werden soll",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Kategorie erfolgreich gelöscht"
          },
          "404": {
            "description": "Kategorie nicht gefunden"
          }
        }
      },
      "patch": {
        "tags": [
          "category-entity-controller"
        ],
        "description": "patch-category",
        "operationId": "patchItemResource-category-patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/categories/{id}/products": {
      "get": {
        "tags": [
          "category-property-reference-controller"
        ],
        "description": "get-product-by-category-Id",
        "operationId": "followPropertyReference-category-get_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelProduct"
                }
              },
              "text/uri-list": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "category-property-reference-controller"
        ],
        "description": "update-product-by-category-Id",
        "operationId": "createPropertyReference-category-put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionModelObject"
              }
            },
            "application/x-spring-data-compact+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionModelObject"
              }
            },
            "text/uri-list": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelProduct"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelProduct"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "category-property-reference-controller"
        ],
        "description": "delete-product-by-category-Id",
        "operationId": "deletePropertyReference-category-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "category-property-reference-controller"
        ],
        "description": "patch-product-by-category-Id",
        "operationId": "createPropertyReference-category-patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionModelObject"
              }
            },
            "application/x-spring-data-compact+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionModelObject"
              }
            },
            "text/uri-list": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelProduct"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/categories/{id}/products/{propertyId}": {
      "get": {
        "tags": [
          "category-property-reference-controller"
        ],
        "description": "get-product-by-category-Id",
        "operationId": "followPropertyReference-category-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelProduct"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "category-property-reference-controller"
        ],
        "description": "delete-product-by-category-Id",
        "operationId": "deletePropertyReferenceId-category-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "ProductController",
          "product-entity-controller"
        ],
        "summary": "Listet alle Produkte auf",
        "description": "Gibt eine Liste aller Produkte zurück. Optional kann nach Kategorie gefiltert werden.",
        "operationId": "getCollectionResource-product-get_1_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filterByCategory",
            "in": "query",
            "description": "Kategorie, nach der gefiltert werden soll",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Drucker"
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiches Abrufen der Produkte",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProduct"
                }
              },
              "application/x-spring-data-compact+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProduct"
                }
              },
              "text/uri-list": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductController",
          "product-entity-controller"
        ],
        "summary": "Erstellt ein neues Produkt",
        "description": "Erstellt ein neues Produkt mit den angegebenen Daten.",
        "operationId": "postCollectionResource-product-post_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Produkt erfolgreich erstellt",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProduct"
                }
              }
            }
          },
          "400": {
            "description": "Ungültige Anfrage",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductShowDto"
                }
              }
            }
          }
        }
      }
    },
    "/products/search/getById": {
      "get": {
        "tags": [
          "product-search-controller"
        ],
        "operationId": "executeSearch-product-get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProduct"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "ProductController",
          "product-entity-controller"
        ],
        "summary": "Findet ein Produkt nach ID",
        "description": "Gibt die Details eines Produkts anhand der spezifischen ID zurück.",
        "operationId": "getItemResource-product-get_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Die ID des Produkts, das abgerufen werden soll",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Produkt gefunden und zurückgegeben",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProduct"
                }
              }
            }
          },
          "404": {
            "description": "Produkt nicht gefunden",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductShowDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductController",
          "product-entity-controller"
        ],
        "summary": "Aktualisiert ein Produkt",
        "description": "Aktualisiert ein bestehendes Produkt anhand der spezifischen ID.",
        "operationId": "putItemResource-product-put_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Die ID des Produkts, das aktualisiert werden soll",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Produkt erfolgreich aktualisiert",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProduct"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProduct"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Produkt nicht gefunden",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductShowDto"
                }
              }
            }
          },
          "400": {
            "description": "Ungültige Anfrage",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductShowDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductController",
          "product-entity-controller"
        ],
        "summary": "Löscht ein Produkt",
        "description": "Löscht ein Produkt anhand der spezifischen ID.",
        "operationId": "deleteItemResource-product-delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Die ID des Produkts, das gelöscht werden soll",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Produkt erfolgreich gelöscht"
          },
          "404": {
            "description": "Produkt nicht gefunden"
          }
        }
      },
      "patch": {
        "tags": [
          "product-entity-controller"
        ],
        "description": "patch-product",
        "operationId": "patchItemResource-product-patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProduct"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/products/{id}/category": {
      "get": {
        "tags": [
          "product-property-reference-controller"
        ],
        "description": "get-category-by-product-Id",
        "operationId": "followPropertyReference-product-get_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              },
              "text/uri-list": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "product-property-reference-controller"
        ],
        "description": "update-category-by-product-Id",
        "operationId": "createPropertyReference-product-put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionModelObject"
              }
            },
            "application/x-spring-data-compact+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionModelObject"
              }
            },
            "text/uri-list": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "product-property-reference-controller"
        ],
        "description": "delete-category-by-product-Id",
        "operationId": "deletePropertyReference-product-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "product-property-reference-controller"
        ],
        "description": "patch-category-by-product-Id",
        "operationId": "createPropertyReference-product-patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionModelObject"
              }
            },
            "application/x-spring-data-compact+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionModelObject"
              }
            },
            "text/uri-list": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/products/{id}/category/{propertyId}": {
      "get": {
        "tags": [
          "product-property-reference-controller"
        ],
        "description": "get-category-by-product-Id",
        "operationId": "followPropertyReference-product-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "product-property-reference-controller"
        ],
        "description": "delete-category-by-product-Id",
        "operationId": "deletePropertyReferenceId-product-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "operationId": "listAllFormsOfMetadata_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/RepresentationModelObject"
                }
              }
            }
          }
        }
      }
    },
    "/profile/categories": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "operationId": "descriptor_1_1_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              },
              "application/alps+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/schema+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonSchema"
                }
              }
            }
          }
        }
      }
    },
    "/profile/products": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "operationId": "descriptor_1_1_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              },
              "application/alps+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/schema+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonSchema"
                }
              }
            }
          }
        }
      }
    },
    "/profile/users": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "operationId": "descriptor_1_1_3",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              },
              "application/alps+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/schema+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonSchema"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user-entity-controller",
          "UserController"
        ],
        "summary": "Listet alle Benutzer auf",
        "description": "Gibt eine Liste aller Benutzer zurück.",
        "operationId": "getCollectionResource-user-get_1_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Erfolgreiches Abrufen der Benutzer",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelUser"
                }
              },
              "application/x-spring-data-compact+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelUser"
                }
              },
              "text/uri-list": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-entity-controller",
          "UserController"
        ],
        "summary": "Erstellt einen neuen Benutzer",
        "description": "Erstellt einen neuen Benutzer mit den angegebenen Daten.",
        "operationId": "postCollectionResource-user-post_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Benutzer erfolgreich erstellt",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUser"
                }
              }
            }
          },
          "400": {
            "description": "Ungültige Anfrage",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailDto"
                }
              }
            }
          }
        }
      }
    },
    "/users/search/findByEmail": {
      "get": {
        "tags": [
          "user-search-controller"
        ],
        "operationId": "executeSearch-user-get",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUser"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/search/findByUsername": {
      "get": {
        "tags": [
          "user-search-controller"
        ],
        "operationId": "executeSearch-user-get_1",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUser"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/search/getById": {
      "get": {
        "tags": [
          "user-search-controller"
        ],
        "operationId": "executeSearch-user-get_2",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUser"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "user-entity-controller",
          "UserController"
        ],
        "summary": "Findet einen Benutzer nach ID",
        "description": "Gibt die Details eines Benutzers anhand der spezifischen ID zurück.",
        "operationId": "getItemResource-user-get_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Die ID des Benutzers, der abgerufen werden soll",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Benutzer gefunden und zurückgegeben",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUser"
                }
              }
            }
          },
          "404": {
            "description": "Benutzer nicht gefunden",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-entity-controller",
          "UserController"
        ],
        "summary": "Aktualisiert einen Benutzer",
        "description": "Aktualisiert einen bestehenden Benutzer anhand der spezifischen ID.",
        "operationId": "putItemResource-user-put_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Die ID des Benutzers, der aktualisiert werden soll",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Benutzer erfolgreich aktualisiert",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUser"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUser"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Ungültige Anfrage",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailDto"
                }
              }
            }
          },
          "404": {
            "description": "Benutzer nicht gefunden",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-entity-controller",
          "UserController"
        ],
        "summary": "Löscht einen Benutzer",
        "description": "Löscht einen Benutzer anhand der spezifischen ID.",
        "operationId": "deleteItemResource-user-delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Die ID des Benutzers, der gelöscht werden soll",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Benutzer erfolgreich gelöscht"
          },
          "404": {
            "description": "Benutzer nicht gefunden"
          }
        }
      },
      "patch": {
        "tags": [
          "user-entity-controller"
        ],
        "description": "patch-user",
        "operationId": "patchItemResource-user-patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUser"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "UserController"
        ],
        "summary": "Authentifiziert den Benutzer",
        "description": "Überprüft die Anmeldedaten und gibt ein JWT zurück, wenn die Authentifizierung erfolgreich ist.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Anmeldung erfolgreich, Token zurückgegeben",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Ungültige Anmeldedaten",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/playground/hello-world": {
      "get": {
        "tags": [
          "playground-controller"
        ],
        "operationId": "helloWorld",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AbstractJsonSchemaPropertyObject": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "readOnly": {
            "type": "boolean"
          }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject"
            }
          },
          "requiredProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "JsonSchema": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject"
            }
          },
          "requiredProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "definitions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "type": {
            "type": "string"
          },
          "$schema": {
            "type": "string"
          }
        }
      },
      "Links": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Link"
        }
      },
      "RepresentationModelObject": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "EntityModelCategory": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "PageMetadata": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedModelEntityModelCategory": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelCategory"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "CollectionModelProduct": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "products": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "CollectionModelObject": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "objects": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "EntityModelProduct": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "PagedModelEntityModelProduct": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "products": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelProduct"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "EntityModelUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "PagedModelEntityModelUser": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelUser"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "CategoryRequestBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProductRequestBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "sku": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserRequestBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "UserUpdateDto": {
        "required": [
          "email",
          "password",
          "role",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Neuer Benutzername des Benutzers",
            "example": "pasvera1997"
          },
          "password": {
            "type": "string",
            "description": "Neues Passwort des Benutzers",
            "example": "NewP@ssw0rd123"
          },
          "role": {
            "type": "string",
            "description": "Neue Rolle des Benutzers (z.B. ADMIN, USER)",
            "example": "USER"
          },
          "email": {
            "type": "string",
            "description": "E-Mail-Adresse des Benutzers",
            "example": "example@example.com"
          }
        },
        "description": "Die neuen Daten für den Benutzer"
      },
      "UserDetailDto": {
        "required": [
          "email",
          "id",
          "role",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutige ID des Benutzers",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "description": "Benutzername des Benutzers",
            "example": "pasvera1997"
          },
          "role": {
            "type": "string",
            "description": "Rolle des Benutzers (z.B. ADMIN, USER)",
            "example": "ADMIN"
          },
          "email": {
            "type": "string",
            "description": "E-Mail-Adresse des Benutzers",
            "example": "example@example.com"
          }
        },
        "description": "DTO für detaillierte Informationen eines Benutzers"
      },
      "ProductUpdateDto": {
        "required": [
          "active",
          "categoryId",
          "name",
          "price",
          "sku",
          "stock"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name des Produkts",
            "example": "Laptop"
          },
          "sku": {
            "type": "string",
            "description": "SKU (Stock Keeping Unit) des Produkts, eindeutige Artikelnummer",
            "example": "ABC123"
          },
          "active": {
            "type": "boolean",
            "description": "Gibt an, ob das Produkt aktiv ist",
            "example": true
          },
          "image": {
            "type": "string",
            "description": "Bild-URL des Produkts",
            "example": "http://example.com/image.jpg"
          },
          "description": {
            "type": "string",
            "description": "Beschreibung des Produkts",
            "example": "Ein leistungsstarker Laptop für den täglichen Gebrauch."
          },
          "price": {
            "type": "number",
            "description": "Preis des Produkts",
            "format": "float",
            "example": 999.95
          },
          "stock": {
            "type": "integer",
            "description": "Verfügbare Stückzahl des Produkts im Lager",
            "format": "int32",
            "example": 50
          },
          "categoryId": {
            "type": "integer",
            "description": "ID der Kategorie, zu der das Produkt gehört",
            "format": "int64",
            "example": 1
          }
        },
        "description": "Die neuen Daten für das Produkt"
      },
      "ProductShowDto": {
        "required": [
          "id",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutige ID eines Produktes",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name des Produkts",
            "example": "Laptop"
          },
          "price": {
            "type": "number",
            "description": "Preis des Produkts",
            "format": "float",
            "example": 999.95
          }
        },
        "description": "DTO zur Anzeige einer einfach Übersicht eines Produktes"
      },
      "CategoryUpdateDto": {
        "required": [
          "active",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name der kategorie",
            "example": "Elektronik"
          },
          "active": {
            "type": "boolean",
            "description": "Gibt an, ob die Kategorie aktiv ist",
            "example": true
          }
        },
        "description": "Die neuen Daten für die Kategorie"
      },
      "CategoryDetailDto": {
        "required": [
          "active",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Eindeutige ID der Kategorie",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name der kategorie",
            "example": "Elektronik"
          },
          "active": {
            "type": "boolean",
            "description": "Gibt an, ob die Kategorie aktiv ist",
            "example": true
          }
        },
        "description": "DTO für detaillierte Informationen einer Kategorie"
      },
      "UserCreateDto": {
        "required": [
          "email",
          "password",
          "role",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Benutzername, der für die Anmeldung verwendet wird",
            "example": "pasvera1997"
          },
          "password": {
            "type": "string",
            "description": "Passwort des Benutzers",
            "example": "P@ssw0rd123"
          },
          "role": {
            "type": "string",
            "description": "Rolle des Benutzers (z.B. ADMIN, USER)",
            "example": "ADMIN"
          },
          "email": {
            "type": "string",
            "description": "E-Mail-Adresse des Benutzers",
            "example": "pasvera@example.com"
          }
        },
        "description": "Daten des zu erstellenden Benutzers"
      },
      "LoginRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "description": "Anmeldedaten des Benutzers"
      },
      "TokenWrapper": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "ProductCreateDto": {
        "required": [
          "active",
          "categoryId",
          "name",
          "price",
          "sku",
          "stock"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name des Produkts",
            "example": "Laptop"
          },
          "sku": {
            "type": "string",
            "description": "SKU (Stock Keeping Unit) des Produkts, eindeutige Artikelnummer",
            "example": "ABC123"
          },
          "active": {
            "type": "boolean",
            "description": "Gibt an, ob das Produkt aktiv ist",
            "example": true
          },
          "image": {
            "type": "string",
            "description": "Bild-URL des Produkts",
            "example": "http://example.com/image.jpg"
          },
          "description": {
            "type": "string",
            "description": "Beschreibung des Produkts",
            "example": "Ein leistungsstarker Laptop für den täglichen Gebrauch."
          },
          "price": {
            "type": "number",
            "description": "Preis des Produkts",
            "format": "float",
            "example": 999.95
          },
          "stock": {
            "type": "integer",
            "description": "Verfügbare Stückzahl des Produkts im Lager",
            "format": "int32",
            "example": 50
          },
          "categoryId": {
            "type": "integer",
            "description": "ID der Kategorie, zu der das Produkt gehört",
            "format": "int64",
            "example": 1
          }
        },
        "description": "Daten des zu erstellenden Produkts"
      },
      "CategoryCreateDto": {
        "required": [
          "active",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name der kategorie",
            "example": "Elektronik"
          },
          "active": {
            "type": "boolean",
            "description": "Gibt an, ob die Kategorie aktiv ist",
            "example": true
          }
        },
        "description": "Daten der zu erstellenden Kategorie"
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "deprecation": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}